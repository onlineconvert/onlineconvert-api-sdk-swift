//
// OutputAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    class OutputAPI: APIBase {
    
        /**
         
         Get list of converted.
         
         - GET /jobs/{jobId}/output
         - examples: [{example=[ {
  "id" : "43",
  "source" : "{}",
  "created_at" : "2015-07-10T10:17:59.198+0000",
  "filename" : "image.png",
  "uri" : "http://www3.online-convert.com",
  "size" : "12835187"
} ], contentType=application/json}]
         
         :param: conversionId (query) 
         :param: inputId (query) 
         :param: jobId (path) ID of job that needs to be fetched

         :returns: Promise<Response<[OutputFile]>> 
         */
        func jobsJobIdOutputGet(#conversionId: String?, inputId: String?, jobId: String) -> RequestBuilder<[OutputFile]> {
            var path = "/jobs/{jobId}/output"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "conversionId": conversionId,
                "inputId": inputId
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[OutputFile]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get information about an output file source.
         
         - GET /jobs/{jobId}/output/{fileId}
         - examples: [{example=[ {
  "id" : "43",
  "source" : "{}",
  "created_at" : "2015-07-10T10:17:59.214+0000",
  "filename" : "image.png",
  "uri" : "http://www3.online-convert.com",
  "size" : "12835187"
} ], contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched
         :param: fileId (path) Id of the file to download

         :returns: Promise<Response<[OutputFile]>> 
         */
        func jobsJobIdOutputFileIdGet(#jobId: String, fileId: String) -> RequestBuilder<[OutputFile]> {
            var path = "/jobs/{jobId}/output/{fileId}"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{fileId}", withString: "\(fileId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[OutputFile]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Deletes a file from the output.
         
         - DELETE /jobs/{jobId}/output/{fileId}
         - examples: [{example=[ {
  "id" : "43",
  "source" : "{}",
  "created_at" : "2015-07-10T10:17:59.226+0000",
  "filename" : "image.png",
  "uri" : "http://www3.online-convert.com",
  "size" : "12835187"
} ], contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched
         :param: fileId (path) Id of the file to download

         :returns: Promise<Response<[OutputFile]>> 
         */
        func jobsJobIdOutputFileIdDelete(#jobId: String, fileId: String) -> RequestBuilder<[OutputFile]> {
            var path = "/jobs/{jobId}/output/{fileId}"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{fileId}", withString: "\(fileId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[OutputFile]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "DELETE", URLString: url, parameters: parameters, isBody: true)
        }
    
    }
}
