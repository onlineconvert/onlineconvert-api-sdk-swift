//
// InputAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    class InputAPI: APIBase {
    
        /**
         
         Get list of binary source files for the conversion.hhh
         
         - GET /jobs/{jobId}/input
         - Description of the get for the inputs of a specific job.
         - examples: [{example=[ {
  "id" : "43",
  "source" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
  "created_at" : "2015-07-10T10:17:59.158+0000",
  "filename" : "image.png",
  "type" : "aeiou",
  "modified_at" : "2015-07-10T10:17:59.158+0000",
  "size" : "12835187"
} ], contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched

         :returns: Promise<Response<[InputFile]>> 
         */
        func jobsJobIdInputGet(#jobId: String) -> RequestBuilder<[InputFile]> {
            var path = "/jobs/{jobId}/input"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[InputFile]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Cretes a new input for the current job.
         
         - POST /jobs/{jobId}/input
         - examples: [{example={
  "id" : "43",
  "source" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
  "created_at" : "2015-07-10T10:17:59.169+0000",
  "filename" : "image.png",
  "type" : "aeiou",
  "modified_at" : "2015-07-10T10:17:59.169+0000",
  "size" : "12835187"
}, contentType=application/json}]
         
         :param: body (body) 
         :param: jobId (path) ID of job that needs to be fetched

         :returns: Promise<Response<InputFile>> 
         */
        func jobsJobIdInputPost(#body: InputFile?, jobId: String) -> RequestBuilder<InputFile> {
            var path = "/jobs/{jobId}/input"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let parameters = body?.encode() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<InputFile>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get list of conversions defined for the current job.
         
         - GET /jobs/{jobId}/input/{fileId}
         - examples: [{example={
  "id" : "43",
  "source" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
  "created_at" : "2015-07-10T10:17:59.178+0000",
  "filename" : "image.png",
  "type" : "aeiou",
  "modified_at" : "2015-07-10T10:17:59.178+0000",
  "size" : "12835187"
}, contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched
         :param: fileId (path) Id of the file to download

         :returns: Promise<Response<InputFile>> 
         */
        func jobsJobIdInputFileIdGet(#jobId: String, fileId: String) -> RequestBuilder<InputFile> {
            var path = "/jobs/{jobId}/input/{fileId}"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{fileId}", withString: "\(fileId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<InputFile>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Removes the input for a job.
         
         - DELETE /jobs/{jobId}/input/{fileId}
         - examples: [{example={
  "id" : "43",
  "source" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
  "created_at" : "2015-07-10T10:17:59.190+0000",
  "filename" : "image.png",
  "type" : "aeiou",
  "modified_at" : "2015-07-10T10:17:59.190+0000",
  "size" : "12835187"
}, contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched
         :param: fileId (path) Id of the file to download

         :returns: Promise<Response<InputFile>> 
         */
        func jobsJobIdInputFileIdDelete(#jobId: String, fileId: String) -> RequestBuilder<InputFile> {
            var path = "/jobs/{jobId}/input/{fileId}"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{fileId}", withString: "\(fileId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<InputFile>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "DELETE", URLString: url, parameters: parameters, isBody: true)
        }
    
    }
}
