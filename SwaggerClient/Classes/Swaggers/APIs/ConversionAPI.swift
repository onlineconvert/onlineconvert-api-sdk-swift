//
// ConversionAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    class ConversionAPI: APIBase {
    
        /**
         
         Get list of conversions defined for the current job.
         
         - GET /jobs/{jobId}/conversions
         - examples: [{example=[ {
  "id" : "8daae6d1-26e0-11e5-b2a1-0800273b325b",
  "category" : "audio",
  "target" : "mp3",
  "options" : ""
} ], contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched

         :returns: Promise<Response<[Conversion]>> 
         */
        func jobsJobIdConversionsGet(#jobId: String) -> RequestBuilder<[Conversion]> {
            var path = "/jobs/{jobId}/conversions"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Conversion]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Adds a new conversion to the given job.
         
         - POST /jobs/{jobId}/conversions
         - examples: [{example={
  "id" : "8daae6d1-26e0-11e5-b2a1-0800273b325b",
  "category" : "audio",
  "target" : "mp3",
  "options" : ""
}, contentType=application/json}]
         
         :param: body (body) information for the conversion.
         :param: jobId (path) ID of job that needs to be fetched

         :returns: Promise<Response<Conversion>> 
         */
        func jobsJobIdConversionsPost(#body: Conversion, jobId: String) -> RequestBuilder<Conversion> {
            var path = "/jobs/{jobId}/conversions"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let parameters = body.encode() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Conversion>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get list of conversions defined for the current job.
         
         - GET /jobs/{jobId}/conversions/{conversionId}
         - examples: [{example={
  "id" : "8daae6d1-26e0-11e5-b2a1-0800273b325b",
  "category" : "audio",
  "target" : "mp3",
  "options" : ""
}, contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched
         :param: conversionId (path) Identifier for the job conversion.

         :returns: Promise<Response<Conversion>> 
         */
        func jobsJobIdConversionsConversionIdGet(#jobId: String, conversionId: String) -> RequestBuilder<Conversion> {
            var path = "/jobs/{jobId}/conversions/{conversionId}"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{conversionId}", withString: "\(conversionId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Conversion>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Removes the conversion for a job.
         
         - DELETE /jobs/{jobId}/conversions/{conversionId}
         - examples: [{example={
  "id" : "8daae6d1-26e0-11e5-b2a1-0800273b325b",
  "category" : "audio",
  "target" : "mp3",
  "options" : ""
}, contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched
         :param: conversionId (path) Identifier for the job conversion.

         :returns: Promise<Response<Conversion>> 
         */
        func jobsJobIdConversionsConversionIdDelete(#jobId: String, conversionId: String) -> RequestBuilder<Conversion> {
            var path = "/jobs/{jobId}/conversions/{conversionId}"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            path = path.stringByReplacingOccurrencesOfString("{conversionId}", withString: "\(conversionId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Conversion>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "DELETE", URLString: url, parameters: parameters, isBody: true)
        }
    
    }
}
