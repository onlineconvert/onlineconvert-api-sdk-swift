//
// JobsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit

extension SwaggerClientAPI {
    
    class JobsAPI: APIBase {
    
        /**
         
         List of jobs active for the current user identified by the key.
         
         - GET /jobs
         - It will return the list of jobs for the given user. In order to get the jobs a key or token must be provided:\n  - If the user key is provided all jobs for the current will be return.\n  - If one token is provided it will return the job assigned to that token if any.\n  \nThe request is paginated with an amount of 50 elements per page in any case.\n
         - examples: [{example=[ {
  "process" : true,
  "id" : "1b8bb2649c090df97fa1e2658e9722d1",
  "input" : [ {
    "id" : "43",
    "source" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
    "created_at" : "2015-07-10T10:17:59.074+0000",
    "filename" : "image.png",
    "type" : "aeiou",
    "modified_at" : "2015-07-10T10:17:59.074+0000",
    "size" : "12835187"
  } ],
  "conversion" : [ {
    "id" : "8daae6d1-26e0-11e5-b2a1-0800273b325b",
    "category" : "audio",
    "target" : "mp3",
    "options" : ""
  } ],
  "test" : true,
  "status" : {
    "code" : "processing",
    "info" : "The file is being processed."
  },
  "token" : "12srxin63mgp23f8mtny2rgtgl1nl39i",
  "callback" : "http://www.mysite.com/callback",
  "created_at" : "2015-07-10T10:17:59.074+0000",
  "server" : "api5//www.online-convert.com",
  "type" : "aeiou",
  "modified_at" : "2015-07-10T10:17:59.074+0000"
} ], contentType=application/json}]
         
         :param: status (query) Filter the status of the job.
         :param: page (query) Pagination for list of elements.

         :returns: Promise<Response<[Job]>> 
         */
        func jobsGet(#status: String?, page: Double?) -> RequestBuilder<[Job]> {
            let path = "/jobs"
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "status": status,
                "page": page
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Job]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: false)
        }
    
        /**
         
         Creates a new Job with the user key.
         
         - POST /jobs
         - examples: [{example={
  "process" : true,
  "id" : "1b8bb2649c090df97fa1e2658e9722d1",
  "input" : [ {
    "id" : "43",
    "source" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
    "created_at" : "2015-07-10T10:17:59.082+0000",
    "filename" : "image.png",
    "type" : "aeiou",
    "modified_at" : "2015-07-10T10:17:59.082+0000",
    "size" : "12835187"
  } ],
  "conversion" : [ {
    "id" : "8daae6d1-26e0-11e5-b2a1-0800273b325b",
    "category" : "audio",
    "target" : "mp3",
    "options" : ""
  } ],
  "test" : true,
  "status" : {
    "code" : "processing",
    "info" : "The file is being processed."
  },
  "token" : "12srxin63mgp23f8mtny2rgtgl1nl39i",
  "callback" : "http://www.mysite.com/callback",
  "created_at" : "2015-07-10T10:17:59.082+0000",
  "server" : "api5//www.online-convert.com",
  "type" : "aeiou",
  "modified_at" : "2015-07-10T10:17:59.082+0000"
}, contentType=application/json}]
         
         :param: body (body) Content of the job.

         :returns: Promise<Response<Job>> 
         */
        func jobsPost(#body: Job) -> RequestBuilder<Job> {
            let path = "/jobs"
            let url = SwaggerClientAPI.basePath + path
            
            let parameters = body.encode() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Job>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "POST", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get information about a Job
         
         - GET /jobs/{jobId}
         - examples: [{example={
  "process" : true,
  "id" : "1b8bb2649c090df97fa1e2658e9722d1",
  "input" : [ {
    "id" : "43",
    "source" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
    "created_at" : "2015-07-10T10:17:59.090+0000",
    "filename" : "image.png",
    "type" : "aeiou",
    "modified_at" : "2015-07-10T10:17:59.090+0000",
    "size" : "12835187"
  } ],
  "conversion" : [ {
    "id" : "8daae6d1-26e0-11e5-b2a1-0800273b325b",
    "category" : "audio",
    "target" : "mp3",
    "options" : ""
  } ],
  "test" : true,
  "status" : {
    "code" : "processing",
    "info" : "The file is being processed."
  },
  "token" : "12srxin63mgp23f8mtny2rgtgl1nl39i",
  "callback" : "http://www.mysite.com/callback",
  "created_at" : "2015-07-10T10:17:59.090+0000",
  "server" : "api5//www.online-convert.com",
  "type" : "aeiou",
  "modified_at" : "2015-07-10T10:17:59.090+0000"
}, contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched

         :returns: Promise<Response<Job>> 
         */
        func jobsJobIdGet(#jobId: String) -> RequestBuilder<Job> {
            var path = "/jobs/{jobId}"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Job>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Cancels a job created that haven't been started. (Allow to cancel jobs in process.)
         
         - DELETE /jobs/{jobId}
         - examples: [{example={
  "process" : true,
  "id" : "1b8bb2649c090df97fa1e2658e9722d1",
  "input" : [ {
    "id" : "43",
    "source" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
    "created_at" : "2015-07-10T10:17:59.105+0000",
    "filename" : "image.png",
    "type" : "aeiou",
    "modified_at" : "2015-07-10T10:17:59.105+0000",
    "size" : "12835187"
  } ],
  "conversion" : [ {
    "id" : "8daae6d1-26e0-11e5-b2a1-0800273b325b",
    "category" : "audio",
    "target" : "mp3",
    "options" : ""
  } ],
  "test" : true,
  "status" : {
    "code" : "processing",
    "info" : "The file is being processed."
  },
  "token" : "12srxin63mgp23f8mtny2rgtgl1nl39i",
  "callback" : "http://www.mysite.com/callback",
  "created_at" : "2015-07-10T10:17:59.105+0000",
  "server" : "api5//www.online-convert.com",
  "type" : "aeiou",
  "modified_at" : "2015-07-10T10:17:59.105+0000"
}, contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched

         :returns: Promise<Response<Job>> 
         */
        func jobsJobIdDelete(#jobId: String) -> RequestBuilder<Job> {
            var path = "/jobs/{jobId}"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<Job>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "DELETE", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Modifies the job identified by the id, allows to start a created job.
         
         - PATCH /jobs/{jobId}
         - examples: [{example={
  "process" : true,
  "id" : "1b8bb2649c090df97fa1e2658e9722d1",
  "input" : [ {
    "id" : "43",
    "source" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
    "created_at" : "2015-07-10T10:17:59.115+0000",
    "filename" : "image.png",
    "type" : "aeiou",
    "modified_at" : "2015-07-10T10:17:59.115+0000",
    "size" : "12835187"
  } ],
  "conversion" : [ {
    "id" : "8daae6d1-26e0-11e5-b2a1-0800273b325b",
    "category" : "audio",
    "target" : "mp3",
    "options" : ""
  } ],
  "test" : true,
  "status" : {
    "code" : "processing",
    "info" : "The file is being processed."
  },
  "token" : "12srxin63mgp23f8mtny2rgtgl1nl39i",
  "callback" : "http://www.mysite.com/callback",
  "created_at" : "2015-07-10T10:17:59.115+0000",
  "server" : "api5//www.online-convert.com",
  "type" : "aeiou",
  "modified_at" : "2015-07-10T10:17:59.115+0000"
}, contentType=application/json}]
         
         :param: body (body) Content of the job.
         :param: jobId (path) ID of job that needs to be fetched

         :returns: Promise<Response<Job>> 
         */
        func jobsJobIdPatch(#body: Job, jobId: String) -> RequestBuilder<Job> {
            var path = "/jobs/{jobId}"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let parameters = body.encode() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Job>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "PATCH", URLString: url, parameters: parameters, isBody: true)
        }
    
        /**
         
         Get list of threads defined for the current job.
         
         - GET /jobs/{jobId}/threads
         - examples: [{example=[ {
  "status" : 123,
  "hash" : "aeiou",
  "created_at" : "2015-07-10T10:17:59.229+0000",
  "modified_at" : "2015-07-10T10:17:59.229+0000",
  "info" : "aeiou"
} ], contentType=application/json}]
         
         :param: jobId (path) ID of job that needs to be fetched

         :returns: Promise<Response<[Thread]>> 
         */
        func jobsJobIdThreadsGet(#jobId: String) -> RequestBuilder<[Thread]> {
            var path = "/jobs/{jobId}/threads"
            path = path.stringByReplacingOccurrencesOfString("{jobId}", withString: "\(jobId)", options: .LiteralSearch, range: nil)
            let url = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[Thread]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder(method: "GET", URLString: url, parameters: parameters, isBody: true)
        }
    
    }
}
